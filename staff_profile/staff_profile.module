<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;

/*
 * Implements hook_preprocess_node()
 */
function staff_profile_preprocess_node(&$variables) {
  $node = $variables['node'];
  //check content type
  if ($node->getType() == 'staff_profile') {
    $variables['#attached']['library'][] = 'staff_profile/staff_profile';
  }
}

/**
 * Implements hook_form_alter().
 */
function staff_profile_form_node_form_alter(&$form, &$form_state, $form_id) {
  /* @var Drupal\Core\Entity\FieldableEntityInterface $node */
  $node = $form_state->getFormObject()->getEntity();

  if ($node->getType() == 'staff_profile') {
   /* var_dump($node);*/
    $form['#attached']['library'][] = 'staff_profile/staff_profile_edit';
    $form['#validate'][] = 'staff_profile_form_node_validate';

    // Mark email field as readonly, it will be built using the netID on form validate
    $form['field_staff_profile_email']['widget'][0]['value']['#disabled'] = TRUE;

    //$form['textonly'] = array('#markup' => '<div class="staff_profile_info"><h3>Important</h3>Many fields will be grayed out because this information comes from other sources. Changes to these fields would be overwritten the next time information was pulled into this record. See <a href="https://my.extension.iastate.edu/extension-staff-directory" target="_blank">https://my.extension.iastate.edu/extension-staff-directory</a> to learn more about how to change these fields.</div>');
    $userid = \Drupal::currentUser()->id();
    if ($userid != 1) {
      $form['field_staff_profile_cty_author']['widget']['#disabled'] = TRUE;
      $form['field_staff_profile_web_amb']['widget']['#disabled'] = TRUE;
      $form['field_staff_profile_site_author']['widget']['#disabled'] = TRUE;
      $form['field_staff_profile_quals']['widget']['#disabled'] = TRUE;
    }
  }
}

/**
 * Validiate function for staff_profile node create/edit form
 */
function staff_profile_form_node_validate(&$form, FormStateInterface $form_state) {
  $old_staffid = '';

  // Check if it's a new node, and if not, get the existing netID
  $is_new_node = TRUE;
  $nid = $form_state->getFormObject()->getEntity()->id();
  if (!empty($nid)) {
    $is_new_node = FALSE;
    $node = Node::load($nid);
    $old_netid = $node->field_staff_profile_netid->value;
    $old_staffid = !empty($node->field_staff_profile_staffid->value) ? $node->field_staff_profile_staffid->value : '';
  }

  // Can only change Staff ID to a blank value, all others come from the feed
  $new_staffid = $form_state->getValue('field_staff_profile_staffid')[0]['value'];
  if (!empty($new_staffid) && intval($new_staffid) > 0) {
    $form_state->setValue(array('field_staff_profile_staffid', 0, 'value'), $old_staffid);
  }

  // Get the new netID from the form, truncating it if there is a @ in the string
  $new_netid = $form_state->getValue('field_staff_profile_netid')[0]['value'];
  $tmp_arr = explode("@", $new_netid, 2);
  $new_netid = $tmp_arr[0];

  // Now that we have the (truncated) netID, we can set the netID and build the email address
  $form_state->setValue(array('field_staff_profile_netid', 0, 'value'), $new_netid);
  $form_state->setValue(array('field_staff_profile_email', 0, 'value'), $new_netid . '@iastate.edu');

  // If it's a new node, or the netID changed, then make sure this netID doesn't already have a node
  if ($is_new_node || $old_netid != $new_netid) {
    $nids = \Drupal::entityQuery('node')->condition('type','staff_profile')
      ->condition('field_staff_profile_netid', $new_netid)
      ->execute();
    if (!empty($nids)) {
      $form_state->setErrorByName('field_staff_profile_netid', 'We already have a profile for netID ' . $new_netid);
    }
  }
}


/*
 * Mark fields from staff directory database as readonly on the staff_profile node edit form
 */
function staff_profile_mark_database_fields_readonly(&$form) {
  $form['title']['widget']['#disabled'] = TRUE;
  $form['field_staff_profile_first_name']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_last_name']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_netid']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_phone']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_fax']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_region']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_location']['widget']['#disabled'] = TRUE;
  $form['field_staff_profile_college']['widget']['#disabled'] = TRUE;
  $form['field_staff_profile_departmentid']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_job_title']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_staffid']['widget'][0]['value']['#disabled'] = TRUE;
  $form['field_staff_profile_base_county']['widget']['#disabled'] = TRUE;

  $form['field_staff_profile_pgm_areas']['widget']['#disabled'] = TRUE;
  $form['field_staff_profile_cty_served']['widget']['#disabled'] = TRUE;

  $form['field_staff_profile_addr']['widget'][0]['address']['#disabled'] = TRUE;
  $form['field_staff_profile_stale']['widget']['value']['#disabled'] = TRUE;
}
